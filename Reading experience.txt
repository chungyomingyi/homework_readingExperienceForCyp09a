本人是從學程式語言是從java開始，而java在巨匠上課時老師就說物件導向是java的重點之一
接觸到之後發現用物件導向寫一些小題目真的很方便，先歸類出抽象類別裡的方法，之後的類別
再繼承就好，不用再重新寫程式碼，這樣可以節省很多時間；之後又介紹了介面實作的方式，
各類別又能實作不同的介面來擴充自己的功能。

但是在老師分享的第一個網站中，有看到之前在練習程式時沒遇過的一個問題(算是本身沒想過的盲點)ー
菱形問題（diamond problem），文中提到了會造成一些問題及bug，但是繼承在寫撰寫程式時還是
有他的優點存在，只是過度使用繼承就會使菱形問題更加明顯，而使程式在維護上不是那麼容易。

再來看完後續「物件導向初學者應該要知道的事情」四部曲，裡面內容有時寫的太遠了，或許可以
講得更簡單一點：「抽象類別」想像成非實體的條件，很抽象而且具有共同的特徵，例：「交通工具」
但是他們的共同特徵可以寫在抽象類別裡，如：名稱，移動速度，載客數，若有其他功能要擴充則可以
用介面來實作擴充功能性，像飛機跟機車都是交通工具，但是飛機能看電影但是機車不行，這道理也可以
套用在遊戲上面，有些角色可以有特殊技能，就能用介面來擴充。

最後一篇文章提到不喜歡物件導向，但是我覺得物件導向在大型專案中扮演著重要角色，必竟它的擴充性、
研展性給IT在後續的維護上有蠻大的方便性，物件導向有它的方便性但並不是絕對性。

至於ptt的php及html的論點，我剛開始接觸php，所以沒有太多的感想，還在努力學習中！